function Board.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 2
pop this 2
push argument 3
pop this 3
push argument 0
pop this 0
push argument 1
pop this 1
push constant 10
pop static 0
push pointer 0
return
function Board.fillCell 3
push argument 0
pop pointer 0
push argument 1
push this 2
call Math.divide 2
pop local 0
push this 1
push local 0
push static 0
call Math.multiply 2
add
pop local 2
push this 0
push argument 1
push local 0
push this 2
call Math.multiply 2
sub
push static 0
call Math.multiply 2
add
pop local 1
push local 1
push constant 1
add
push local 2
push constant 1
add
push local 1
push static 0
push constant 1
sub
add
push local 2
push static 0
push constant 1
sub
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Board.drawFood 3
push argument 0
pop pointer 0
push argument 1
push this 2
call Math.divide 2
pop local 0
push this 1
push local 0
push static 0
call Math.multiply 2
add
pop local 2
push this 0
push argument 1
push local 0
push this 2
call Math.multiply 2
sub
push static 0
call Math.multiply 2
add
pop local 1
push local 1
push static 0
push constant 2
call Math.divide 2
add
push local 2
push static 0
push constant 2
call Math.divide 2
add
push constant 4
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Board.drawBorder 2
push argument 0
pop pointer 0
push this 0
push this 2
push static 0
call Math.multiply 2
add
pop local 0
push this 1
push this 3
push static 0
call Math.multiply 2
add
pop local 1
push this 0
push this 1
push local 0
push this 1
call Screen.drawLine 4
pop temp 0
push local 0
push this 1
push local 0
push local 1
call Screen.drawLine 4
pop temp 0
push local 0
push local 1
push this 0
push local 1
call Screen.drawLine 4
pop temp 0
push this 0
push local 1
push this 0
push this 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
